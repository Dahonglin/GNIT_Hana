@charset "utf-8";
/* 로봇 PJ - robot.css */
@import url('https://fonts.googleapis.com/css2?family=Russo+One&family=Zen+Dots&display=swap');
/* 폰트 mdn */
/* font-family: 'Russo One', sans-serif;
font-family: 'Zen Dots', cursive; */


* {
    padding: 0;
    margin: 0;
}

html {
    scroll-behavior: smooth;
    /* 스크롤 동작 시 부드럽게 움직이도록 해줌 */
}

body {
    overflow-x: hidden;
    background: url(../images/bg.jpg) no-repeat fixed top/cover;
}

/* 공사 가이드라인 */
/* body * {
    outline: 2px dashed lime;
} */

/* 

    [요소 정중앙 정렬법]
    1. 50%를 밀고 자기 크기의 절반 만큼 뺀다
    ((사용예)) calc(50% - 특정px)
    * 주의 : 연산자 앞 뒤에 띄어쓰기가 반드시 필요!!!!!
    >>> calc() css 함수(메서드)를 사용
    - 사칙연산을 사용하며, 유동적인 % 단위에서 특정 px을 연산하여 사용함
    
    2. 50%로 밀고 자기 자신 크기의 절반 만큼 반대 방향 이동
    ->>> transform : translate(-50%, -50%) 사용!

*/

/* 로봇페이지로고 */
h1#logo {
    position: fixed;
    /* 부모는 항상 보이는 화면 */
    top: calc(50% - 100px);
    left: calc(50% - 100px);
    z-index: 1;
    /* 위치 가장 윗층 */
    transform: scale(2);
    /* 크기 2배 */
    width: 200px;
    height: 200px;
    border: 3px solid #ccc;
    border-radius: 50%;
    text-align: center;
    /* 가로 중앙 */
    line-height: 200px;
    /* 세로 중앙 */
    font-family: 'Russo One', sans-serif;
    font-size: 40px;
    letter-spacing: 5px;
    color: rgb(251, 255, 0);
    background: rgb(171, 255, 234) url(../images/robot_03.png)no-repeat;
    background-position: center/10px;
    background-size: 160px;
    text-shadow: 2px 2px 2px #000;
    box-shadow: 0 0 20px 5px rgb(0, 247, 255),
        inset 0 0 20px 5px rgb(66, 169, 195);

    /* 애니메이션 호출 : 이시이지반방마 */
    animation: logoAni 2s ease-in-out 2s forwards,
        logoAni2 1s ease-in-out 4s infinite alternate;

}

/* 로고 애니 키프레임 */
@keyframes logoAni {
    /* 시작값 - 초기값과 같으면 생략! */
    /* from {
        top: calc(50% - 100px);
        left: calc(50% - 100px);
        transform: scale(2);
    } */

    /* 80%값 */
    80%{
        top: 50px;
        left: 50px;
        transform: scale(1) rotate(0deg);
    }

    /* 80%~100% 구간에 rotate각도만 20도로 변경애니
    후속애니와 자연스럽게 연결됨! */

    /* 끝값 */
    100%{
        top: 50px;
        left: 50px;
        transform: scale(1) rotate(20deg);
    }
} /* logoAni 키프레임 */

/* 로고 흔들기 키프레임 */
@keyframes logoAni2 {
    0%{
        transform: rotate(20deg);
    }
    100%{
        transform: rotate(-20deg);
    }
} /* logoAni2 키프레임 */

/********************************************************************

    [ CSS로 애니메이션 만들기 ]

    - 시간에 따라서 css 설정이 변경 되어 애니메이션 하도록
    키프레임을 설정하고 이것을 호출함으로써
    의도 된 연출을 구현하는 것이 CSS 애니메이션이다.

    [  애니메이션 키프레임 만들기  ]
    - 키프레임이란? 애니메이션 장면을 넣는 코드

    1. 두장면 키프레임
    @keyframes 키프레임 이름 {
        from { 시작 css 설정 }
        to { 종료 css 설정 }
    }

    또는
    
    @keyframes 키프레임 이름 {
        0% { 시작 css 설정 }
        100% { 종료 css 설정 }
    }

    -> 만약 시작 설정(from, 0%)이 초기 설정과 같다면, 시작 설정 생략 가능.

    2. 여러장면 키프레임
    @keyframes 키프레임 이름 {
        0% { 시작 css 설정 }
        10% { 시작 css 설정 }
        20% { 시작 css 설정 }
        ...
        70% { 시작 css 설정 }
        90% { 시작 css 설정 }
        100% { 종료 css 설정 }
    }
    (1) 장면에 대한 시간 계산은 어떻게?
    -> 전체 시간 * 설정된%/100

    (2) 전체 시간은 언제 세팅하는가? -> 호출 시 세팅

    [  설정 된 키프레임 호출 방법  ]

    animation : 이시이지반방마
    (이름 시간 이징 지연 반복 방향 마지막상태)

    1. 이름 (animation-name) : 키프레임 이름
    2. 시간 (animation-duration) : 애니메이션 동작 시간 (초단위 s) 
    3. 이징 (animation-timing-function) : easing 가속도
    4. 지연 (animation-delay) : 애니메이션 시작 지연 시간(s)
    5. 반복 (animation-iteration-count) : 애니메이션 반복
                                          - 기본값:1 / 숫자를 쓰면 숫자만큼 반복
                                          - 영원히 반복 infinite(인피니트)
    6. 방향 (animation-direction) : 시작 - > 끝
                                    - 반복 시 시작과 반대 경로로 애니메이션을 만듬
                                    - alternate : 시작->끝, 끝->시작
                                    - 유의사항 : 반복 횟수가 2회 이상이어야함.
    7. 마지막 상태 (animation-fill-mode) : 
        - 애니메이션이 끝났을 때 처음으로 돌아가는게 기본이지만,
        -> forwards (앞쪽에... 즉, 애니 끝장면으로 마무리.)
        - 유의사항 : infinite(영원히) 일 때는 해당 사항 없음.

********************************************************************/



/* 내용 보기 링크 */
.link {
    position: absolute;
    /* 부모는 ? 화면 */
    top: 100px;
    right: 50px;
}

/* 점멸 애니메이션 키프레임 조절 호출 클래스 */
.showIt {
    opacity: 0;
    /* 처음에 투명 */
    /* 애니메이션 이시이지반방마 */
    animation: showIt 0.7s ease-in-out 5s forwards;
}

/* 애니메이션 등장시간 차이 클래스 */
.showItTit {
    animation-delay: 5.5s;
}

.showItTop {
    animation-delay: 6s;
}

/* 점멸 애니메이션 키프레임 */
@keyframes showIt {
    0% {
        opacity: 1;
    }

    20% {
        opacity: 0.5;
    }

    30% {
        opacity: 0;
    }

    40% {
        opacity: 1;
    }

    50% {
        opacity: 0.3;
    }

    60% {
        opacity: 0;
    }

    70% {
        opacity: 1;
    }

    80% {
        opacity: 0.5;
    }

    90% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

/* showIt 키프레임*/

.link a {
    font-family: 'Zen Dots', cursive;
    font-size: 30px;
    color: rgb(255, 0, 128);
    text-decoration: none;
    text-shadow: 2px 2px 2px #000;
}

.link a:hover {
    color: rgb(0, 255, 242);
    text-decoration: underline;
}

.btntop {
    position: fixed;
    bottom: 20px;
    right: 20px;
    width: 100px;
    height: 100px;
    text-align: center;
    line-height: 100px;
    border-radius: 50%;
    color: rgb(0, 247, 255);
    font-family: 'Russo One', sans-serif;
    font-size: 20px;
    background: rgb(0, 0, 0);
}

.btntop:hover {
    background: rgb(0, 238, 255);
    color: rgb(0, 0, 0);
}


/* 로봇머리 */
#head {
    position: relative;
    /* 부모 자격 부여 */
    left: 100%;
    /* 머리가 오른쪽 바깥에 나가있음 */
    width: 250px;
    height: 250px;
    background: url(../images/metal01.jpg)no-repeat center/cover;
    margin: 0 auto;
    margin-top: 150px;
    border-radius: 30px 30px 0 0;
}

/* 로봇 애니 호출 클래스 */
.rAni {
    /* 애니메이션 */
    animation: robotAni 1.5s ease-in-out 3s forwards;
}

/* 로봇머리, 몸 제자리 키프레임 */
@keyframes robotAni {
    to {
        left: 0;
    }
}

/* 로봇 눈1 */
#eye1 {
    position: absolute;
    top: 45px;
    left: 45px;
    /* 부모는?? */
    width: 50px;
    height: 50px;
    background: url(../images/e1.jpg) no-repeat 0/105% 100%;
}

/* 로봇 눈2 */
#eye2 {
    position: absolute;
    top: 45px;
    right: 45px;
    /* 부모는?? */
    width: 50px;
    height: 50px;
    background: url(../images/e2.jpg) no-repeat 0/105% 100%;
}

/* 코 */
#nose {
    position: absolute;
    top: 100px;
    right: 100px;
    /* 부모는?? */
    width: 50px;
    height: 70px;
    background: url(../images/nose.jpg) no-repeat 0/110% 100%;
}

/* 입 */
#mouth {
    position: absolute;
    top: 190px;
    right: 75px;
    /* 부모는?? */
    width: 100px;
    height: 30px;
    background: url(../images/mouth.png) no-repeat 0/100% 100%;
    animation: mouthAni .1s linear 6s infinite alternate;
}

/* 입움직이기 키프레임 */
@keyframes mouthAni {
    to {
        transform: scaleY(.2);
    }

    /* 마우스 애니 키프레임 */
}


/* 귀1 */
#ear1 {
    position: absolute;
    top: -100px;
    left: -20px;
    /* 부모는?? */
    width: 20px;
    height: 200px;
    background: url(../images/metal02.jpg) no-repeat 0/100% 100%;
    border-radius: 20px 0 0 20px;
}

/* 귀2 */
#ear2 {
    position: absolute;
    top: -100px;
    right: -20px;
    /* 부모는?? */
    width: 20px;
    height: 200px;
    background: url(../images/metal02.jpg) no-repeat 0/100% 100%;
    border-radius: 0 20px 20px 0;
}

/* 로봇몸 */
#body {
    position: relative;
    /* 부모 자격 부여 */
    left: -100%;
    /* 몸통 왼쪽 바깥에 나가있음 */
    width: 250px;
    height: 300px;
    background: url(../images/metal01.jpg)no-repeat center/cover;
    margin: 0 auto;
    margin-top: 50px;
    margin-bottom: 300px;
    /* 다리 길이 만큼 아래쪽에 공백 */
}

/* 로봇목 */
#neck {
    position: absolute;
    width: 50px;
    height: 50px;
    background: url(../images/metal02.jpg) no-repeat 0/100% 100%;
    left: 100px;
    top: -50px;
}

/* 팔다리 공통 */
.parts {
    width: 50px;
    height: 250px;
    background: url(../images/metal02.jpg) repeat-y 0/100%;

}

/* 로봇팔1 */
#arm1 {
    position: absolute;
    left: -50px;
}

/* 로봇팔2 */
#arm2 {
    position: absolute;
    right: -50px;
    transform-origin: top;
    transform: rotate(0deg);
    /* 애니메이션 : 이시이지반방마 */
    animation: armAni 0.8s ease-in-out 5s forwards,
        armAni2 0.4s ease-in-out 5.8s infinite alternate;
}

/* 오른팔 키프레임 */
@keyframes armAni {
    to {
        transform: rotate(-155deg);
    }

    /* armAni 키프레임 */
}

/* 오른팔 흔들기 키프레임 */
@keyframes armAni2 {

    /* 첫번째 애니가 끝난 상태에서 출발 */
    to {
        transform: rotate(-140deg);
    }

    /* armAmi2 키프레임 */
}


/* 어깨공통 */
.sh {
    position: absolute;
    width: 80px;
    height: 80px;
    background: url(../images/metal01.jpg) no-repeat center/cover;
}

/* 어깨1 */
#sh1 {
    position: absolute;
    top: -30px;
    left: -80px;
    width: 80px;
    height: 80px;
    border-radius: 50% 5px 5px 50%;

}

/* 어깨2 */
#sh2 {
    position: absolute;
    top: -30px;
    right: -80px;
    width: 80px;
    height: 80px;
    border-radius: 5px 50% 50% 5px;
}


/* 로봇다리1 */
#leg1 {
    position: absolute;
    top: 100%;
}

/* 로봇다리1 */
#leg2 {
    position: absolute;
    top: 100%;
    right: 0px;

}

/* TV */
#tv {
    position: absolute;
    /* 하위 요소에 대한 부모 역할 */
    top: 30px;
    left: 25px;
    /* 부모는 #body */
    width: 200px;
    height: 150px;
    background: url(../images/tv.jpg)no-repeat 0/100%;
}

/* 스크린 */
#screen {
    position: absolute;
    top: 17px;
    left: 12px;
    /* 부모는 누구? #tv */
    width: 138px;
    height: 105px;
    background-color: #000;
    border-radius: 18px;
    overflow: hidden;
}

/* 유튜브 아이프레임 */
#screen iframe {
    position: absolute;
    /* 부모는 #screen */
    left: -20px;
    top: -20px;
    width: 135%;
    height: 135%;
    /* 부모에 맞춰 크기가 맞춰짐 */
    border: none;
    /* 아이프레임 기본 테두리를 없앰 */
}

/* 로봇 설명 박스 */
#dcbx {
    width: 800px;
    margin: 0 auto;
    margin-bottom: 200px;
    border: 2px solid #fff;
    border-radius: 20px;
    padding: 40px 30px;
    /* 위아래 양쪽 */
    color: #fff;
    background-color: rgba(0, 0, 0, 0.7);
    text-shadow: 1px 1px 3px #000;
    box-shadow: inset 0 0 50px 10px aquamarine,
        0 0 20px 3px rgb(255, 255, 255);
    /* 박스그림자 : (내/외부) x y 블러(크기) 색
    -> 그림자색을 형광 계열로 주면 glow 효과
    -> 글자그림자와 달리 그림자 크기(spread)를 줄 수 있다.(포토샵 그림자 퍼짐 크기)
    이것으로 더 강한 효과를 줄 수있음. (기본값 0)
    -> 글자 그림자나 박스 그림자 모두 여러개를 콤마로 세팅 가능. */
}

/* 로봇설명제목 */
#dcbx h2 {
    position: sticky;
    top: 10px;
    /* 스티키 + 탑 위치  스크롤 시 top 값에 도달하면
    위치를 고정함 */
    font-size: 35px;
    text-align: center;
    color: gold;
    background-color: rgba(255, 255, 255, 0.4);
    border-radius: 30px;
    padding: 5px;
}

#dcbx small {
    font-size: 15px;
    display: block;
    text-align: center;
    padding: 10px;
    color: lightgreen;
}

/* 설명문단 */
#dcbx p {
    padding: 10px;
    font-size: 15px;
    line-height: 1.8;
    /* 줄간격 : 배수/단위 등 */
    letter-spacing: 1px;
    /* 자간 */
    word-spacing: 2px;
    /* 단어간격 */

    /* 가독성을 위한 다단 설정 */
    /* 다단표시(다중열속성) */
    column-count: 3;
    /* 다중열 갯수 */
    column-rule: 1px dashed rgb(172, 172, 172);
    /* 다중열 구분선 */
    column-gap: 55px;
    /* 다중열 사이 간격
    -> 구분선 오른쪽 간격 조정 */
    /* 문단정렬 */
    text-align: justify;
    /* 양쪽정렬 - 양쪽 끝라인 맞춤 */
    word-break: break-all;
    /* 단어 깨기 - 스펠링을 한글자씩 깨줌
    영문자는 단어가 따라다니기때문에 정렬을 위해 깨줘야함 */
    text-indent: 20px;
    /* 첫줄 들여쓰기 */
}

/* 가상 요소로 첫글자 디자인 변경 */
#dcbx p::first-letter {
    font-size: 30px;
    font-weight: bold;
    color: gold;
}